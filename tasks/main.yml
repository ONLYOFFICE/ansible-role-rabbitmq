---
- name: Install epel
  ansible.builtin.package:
    name: epel-release
    state: present
  when: ansible_os_family == "RedHat"

- name: Install erlang
  ansible.builtin.package:
    name: erlang
    state: present

- name: Include Debian tasks
  ansible.builtin.include_tasks: "Debian.yml"
  when: (ansible_os_family == "Debian" and ansible_distribution_release != "focal" and ansible_distribution_release != "bullseye" and ansible_distribution_release != "jammy")

- name: Include Ubuntu2004 tasks
  ansible.builtin.include_tasks: "Focal.yml"
  when: ansible_distribution_release == "focal"

- name: Include Ubuntu2204 tasks
  ansible.builtin.include_tasks: "Jammy.yml"
  when: ansible_distribution_release == "jammy"

- name: Include Debian Bullseye tasks
  ansible.builtin.include_tasks: "Bullseye.yml"
  when: ansible_distribution_release == "bullseye"

- name: Include Centos7 install tasks
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version != "8"

- name: Include Centos8 install tasks
  ansible.builtin.include_tasks: "{{ ansible_os_family }}{{ ansible_distribution_major_version }}.yml"
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

- name: Generate rabbitmq.conf
  template:
    src: rabbitmq.conf.j2
    dest: "{{ rabbitmq_cfg_file }}"
    mode: 0644
    owner: root
    group: root
  when: rabbitmq_cfg_settings
  notify: Restart rabbitmq

- name: Ensure rabbitmq is started and enabled (if configured).
  ansible.builtin.service:
    name: "{{ rabbitmq_daemon }}"
    state: "{{ rabbitmq_state }}"
    enabled: "{{ rabbitmq_enabled }}"

- name: Ensure rabbitmq vhosts
  community.rabbitmq.rabbitmq_vhost:
    name: "{{ item }}"
  with_items: "{{ rabbitmq_vhosts }}"

- name: Ensure the users present
  community.rabbitmq.rabbitmq_user:
    user: "{{ item.user }}"
    password: "{{ item.password }}"
    configure_priv: "{{ item.configure_priv | default('.*') }}"
    read_priv: "{{ item.read_priv | default('.*') }}"
    write_priv: "{{ item.write_priv | default('.*') }}"
    vhost: "{{ item.vhost | default('/') }}"
    tags: "{{ item.tags | default('') }}"
  with_items: "{{ rabbitmq_users }}"

- name: Ensure the users removed
  community.rabbitmq.rabbitmq_user:
    user: "{{ item }}"
    state: absent
  with_items: "{{ rabbitmq_users_remove }}"
